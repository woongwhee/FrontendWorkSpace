/* 속성선택자중 일치하는 경우를 찾는방법 ***** */
div[name=name1]{
    background-color: blue;
}
/* 모든 div중 name1 이 포함되어있는 경우를 찾는다.*/
div[name~=name2]{
    background-color: yellow;
}
div[name~=name3]{
    color: brown;
}
/* div중에서 class속성값이 div로 "시작"하는 요소 (-앞의 한단어로써)*/
div[class|=divㅇ]{
    border-color: black;
    border-style: ridge;
}
/* 모든 div중에서 na로 시작하는 경우를 찾는다. */
div[name^=na]{
    background: blue;
}
/* 모든 class중에서 ss로 끝나는 경우를 찾는다. */
div[class$=ss]{
    color:white;
}

/* div중에서 class 속성값의 i가 포함되어있는 요소 */
div[class*=i]{
    color: blueviolet;
}

.div-class[name~=name2]{
    background-color: white;
}



/*2. 자손선택자와 후손선택자  */
/* a>b: a요소의 자손들 중 b요소들만 선택 */
#test1>h4{
    background-color: bisque;
}

#test1>ul{
    background-color:red;
}
/* a요소의 후손들중 b요소들만 선택 */
#test1 h4{
    color:white;
}
#test1>ul>li{
    color:blue;
}
/* 중첩도 가능하다. */
#test1 li{
    border-top: 2;
    border-color: blueviolet;
    border-style: outset;
}
/* 선택자의 우선순위가 있음 */
/* 직접 자손선택자로 지정한 선택자의 스타일이 먼저 덮어씌워진다는 것이다 */

#test2+h4{
    background-color: green;
}
#test2+ul{
    background-color: pink;
}

/*a~b:a요소 뒤에 모든 b요소 다 선택*/
#test2~ul{
    /* background-color: deeppink; */
}
#test2~div{
    /* background-color: yellow; */
}

/* 4. 반응 선택자 */
.area{
    background:mediumorchid;
    color:white;
    width: 100px;
    height:100px;
}

#active-test:active{
    background-color: pink;
    color: black;
    
}
#active-test:hover{
    cursor:pointer;
    color:blue;
}
#hover-test:hover{
    cursor:pointer;
    color:black;
    background-color: blue;
}

/* 5. 상태선택자. */
input[type="checkbox"]:checked{/*모든 input태그중에 type속성이 checkbox인 모든 요소중에 체크된 요소만 선택*/
    width:20px;
    height: 20px;
}
input[type="checkbox"]:checked+label{
    font-size:50px;
}

input[name^=user]:focus{
    background-color: deeppink;
}
/*사용 불가능한 태그*/
input[name^=user]:disabled{
    background-color: rgb(197, 197, 197);
}